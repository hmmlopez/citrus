<?xml version="1.0" encoding="UTF-8"?>
<section id="containers-repeat">
    <title>Repeat until true</title>

    <para>Quite similar to the previously described iterate container this repeating container will execute its actions in
    a loop according to an ending condition. The condition describes a Boolean expression using
    the operators as described in the previous chapter.</para>

    <note>
      <para>The loop continues its work until the provided condition evaluates to <emphasis>true</emphasis>. It is very important to notice that the
      repeat loop will execute the actions before evaluating the condition. This means the actions get executed 1-n times.</para>
    </note>
    
    <para><emphasis>XML DSL</emphasis></para>
    <programlisting>&lt;testcase name=&quot;iterateTest&quot;&gt;
    &lt;actions&gt;
        &lt;repeat-until-true index=&quot;i&quot; condition=&quot;(i = 3) or (i = 5)&quot;&gt;
            &lt;echo&gt;
                &lt;message&gt;index is: ${i}&lt;/message&gt;
            &lt;/echo&gt;
        &lt;/repeat-until-true&gt;
    &lt;/actions&gt;
&lt;/testcase&gt;</programlisting>

    <para><emphasis>Java DSL designer and runner</emphasis></para>
    <programlisting language="java">@CitrusTest
public void repeatTest() {
    repeat().until("(i gt 5) or (i = 3)").index("i"))
        .actions(
            echo("index is: ${i}")
        );
}</programlisting>


    <para>As you can see the repeat container is only executed when the iterating condition expression evaluates to <emphasis>false</emphasis>. By the time the
    condition is <emphasis>true</emphasis> execution is discontinued. You can use basic logical operators such as <emphasis>and</emphasis>, <emphasis>or</emphasis> and so on.</para>

    <para>A more powerful way is given by Hamcrest matchers that are directly supported in condition expressions.</para>

    <para><emphasis>XML DSL</emphasis></para>
    <programlisting>&lt;testcase name=&quot;iterateTest&quot;&gt;
    &lt;actions&gt;
        &lt;repeat-until-true index=&quot;i&quot; condition=&quot;@assertThat(anyOf(is(3), is(5))@&quot;&gt;
            &lt;echo&gt;
                &lt;message&gt;index is: ${i}&lt;/message&gt;
            &lt;/echo&gt;
        &lt;/repeat-until-true&gt;
    &lt;/actions&gt;
&lt;/testcase&gt;</programlisting>

    <para><emphasis>Java DSL designer and runner</emphasis></para>
    <programlisting language="java">@CitrusTest
public void repeatTest() {
    repeat().until(anyOf(is(3), is(5)).index("i"))
        .actions(
            echo("index is: ${i}")
        );
}</programlisting>

    <para>The Hamcrest matcher usage simplifies the reading a lot. And it empowers you to combine more complex condition expressions. So I personally prefer this syntax.</para>

</section>