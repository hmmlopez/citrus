<?xml version="1.0" encoding="UTF-8"?>
<chapter id="reporting">
    <title>Reporting and test results</title>
  
    <para>The framework generates different reports and results after a test run for you. These report and result pages will
    help you to get an overview of the test cases that were executed and which one were failing.</para>
  
    <section id="reporting-logging">
        <title>Console logging</title>
    
        <para>During the test run the framework will provide a huge amount of information that is printed out to
        the console. This includes current test progress, validation results and error information. This
        enables the user to quickly supervise the test run progress. Failures in tests will be printed to the
        console just the time the error occurred. The detailed stack trace information and the detailed
        error messages are helpful to get the idea what went wrong.</para>

        <para>As the console output might be limited to a defined buffer limit, the user may not be able to
        follow the output to the very beginning of the test run. Therefore the framework additionally
        prints all information to a log file according to the logging configuration.</para>
    
        <para>The logging mechanism uses the SLF4J logging framework. SLF4J is independent of logging framework implementations on the 
        market. So in case you use Log4J logging framework the specified log file path as well as logging levels can be freely configured 
        in the respective log4j.xml file in your project. At the end of a test run the combined test results get printed to both console 
        and log file. The overall test results look like following example:</para>
        
        <programlisting><literal>
CITRUS TEST RESULTS

  [...]
  HelloService_Ok_1             : SUCCESS
  HelloService_Ok_2             : SUCCESS
  EchoService_Ok_1              : SUCCESS
  EchoService_Ok_2              : SUCCESS
  EchoService_TempError_1       : SUCCESS
  EchoService_AutomacticRetry_1 : SUCCESS
  [...]
  
  Found 175 test cases to execute
  Skipped 0 test cases (0.0%)
  Executed 175 test cases
  Tests failed:         0 (0.0%)
  Tests successfully: 175 (100.0%)</literal></programlisting>
        
        <para>Failed tests will be marked as failed in the result list. The framework will give a short description
        of the error cause while the detailed stack trace information can be found in the log messages
        that were made during the test run.</para>
        
        <programlisting><literal>HelloService_Ok_3 : failed - Exception is Action timed out</literal></programlisting>
    </section>
    
    <section id="reporting-junit">
        <title>JUnit reports</title>
    
        <para>As tests are executed as TestNG test cases, the framework will also generate JUnit compliant XML and HTML 
        reports. JUnit test reports are very popular and find support in many build management and development tools. 
        In general the Citrus test reports give you an overall picture of all tests and tell you which of them were failing.</para>
        
        <para>Build management tools like Jenkins can easily import and display the generated JUnit
        XML results. Please have a look at the TestNG and JUnit documentation for more information about this topic as well 
        as the build management tools (e.g. Jenkins) to find out how to integrate the tests results.</para>
    </section>
    
    <section id="reporting-html">
        <title>HTML reports</title>
        
        <para>Citrus creates HTML reports after each test run. The report provides detailed information on the test run with a summary of all
        test results. You can find the report after a test run in the directory <literal>${project.build.directory}/test-output/citrus-reports</literal>.</para>
        
        <para>The report consists of two parts. The test summary on top shows the total number executed tests. The main part lists all test cases 
        with detailed information. With this report you immediately identify all tests that were failing. Each test case is marked in color 
        according to its result outcome.</para>
        
        <para>The failed tests give detailed error information with error messages and Java StackTrace information. In addition to that the report 
        tries to find the test action inside the XML test part that failed in execution. With the failing code snippet you can see where the test stopped.</para>
        
        <note>
            <para>JavaScript should be active in your web browser. This is to enable the detailed information which comes to you in form of tooltips
            like test author or description. If you want to access the tooltips JavaScript should be enabled in your browser.</para>
        </note>

        <para>The HTML reports are customizable by system properties. Use following properties e.g. in your <emphasis>citrus.properties</emphasis> file:</para>

        <itemizedlist>
          <listitem><para><emphasis>citrus.html.report.enabled</emphasis>: Enables/disables HTML report generation (default=<literal>true</literal>).</para></listitem>
          <listitem><para><emphasis>citrus.html.report.directory</emphasis>: Output directory path (default=<literal>${project.build.directory}/test-output/citrus-reports</literal>).</para></listitem>
          <listitem><para><emphasis>citrus.html.report.file</emphasis>: File name for the report file (default=<literal>citrus-test-results.html</literal>).</para></listitem>
          <listitem><para><emphasis>citrus.html.report.template</emphasis>: Template HTML file with placeholders for report results.</para></listitem>
          <listitem><para><emphasis>citrus.html.report.detail.template</emphasis>: Template file for detailed test results.</para></listitem>
          <listitem><para><emphasis>citrus.html.report.logo</emphasis>: File resource path pointing to a image that is added to top of HTML report.</para></listitem>
        </itemizedlist>

        <para>The HTML report is based on a template file that is customizable to your special needs. The default templates can be found in
        <ulink url="https://github.com/christophd/citrus/tree/master/modules/citrus-core/src/main/resources/com/consol/citrus/report">report-templates sources</ulink>.</para>
    </section>
    
</chapter>