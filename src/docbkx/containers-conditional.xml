<?xml version="1.0" encoding="UTF-8"?>
<section id="containers-conditional">
    <title>Conditional</title>

    <para>Now we deal with conditional executions of test actions. Nested actions inside a conditional container are
    executed only in case a booleand expression evaluates to true. Otherwise the container execution is not performed at all.</para>
    
    <para>See some example to find out how it works with the conditional expression string.</para>
    
    <para><emphasis>XML DSL</emphasis></para>
    <programlisting>&lt;testcase name=&quot;conditionalTest&quot;&gt;
    &lt;variables&gt;
      &lt;variable name="index" value="5"/&gt;
      &lt;variable name="shouldSleep" value="true"/&gt;
    &lt;/variables&gt;

    &lt;actions&gt;
        &lt;conditional expression=&quot;${index} = 5&quot;&gt;
            &lt;sleep seconds=&quot;10&quot;/&gt;
        &lt;/conditional&gt;

        &lt;conditional expression=&quot;${shouldSleep}&quot;&gt;
            &lt;sleep seconds=&quot;10&quot;/&gt;
        &lt;/conditional&gt;

        &lt;conditional expression=&quot;@assertThat('${shouldSleep}', 'anyOf(is(true), isEmptyString())')@&quot;&gt;
            &lt;sleep seconds=&quot;10&quot;/&gt;
        &lt;/conditional&gt;
    &lt;/actions&gt;
&lt;/testcase&gt;</programlisting>

    <para><emphasis>Java DSL designer and runner</emphasis></para>
    <programlisting language="java">@CitrusTest
public void conditionalTest() {
    variable("index", 5);
    variable("shouldSleep", true);

    conditional().when("${index} = 5"))
        .actions(
            sleep(10000L)
        );

    conditional().when("${shouldSleep}"))
        .actions(
            sleep(10000L)
        );

    conditional().when("${shouldSleep}", anyOf(is("true"), isEmptyString()))
        .actions(
            sleep(10000L)
        );
}</programlisting>

    <para>The nested sleep action is executed in case the variable ${index} is equal to the value '5'. This conditional execution of test actions
    is useful when dealing with different test environments such as different operating systems for instance. The conditional container also supports
    expressions that evaluate to the character sequence "true" or "false" as shown in the ${shouldSleep} example.</para>

    <para>The last conditional container in the example above makes use of Hamcrest matchers. The matcher evaluates to <emphasis>true</emphasis> of <emphasis>false</emphasis> and based on that
    the container actions are executed or skipped. The Hamcrest matchers are very powerful when it comes to evaluation of multiple conditions at a time.</para>
    
</section>