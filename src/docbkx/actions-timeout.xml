<?xml version="1.0" encoding="UTF-8"?>
<section id="actions-timeout">
    <title>Receive timeout</title>

    <para>In some cases it might be necessary to validate that a message is <emphasis>not</emphasis> present on a destination. 
    This means that this action expects a timeout when receiving a message from an endpoint destination. For instance the tester 
    intends to ensure that no message is sent to a certain destination in a time period. In that case the timeout would 
    not be a test aborting error but the expected behavior. And in contrast to the normal behavior when a message is received 
    in the time period the test will fail with error.</para>
    
    <para>In order to validate such a timeout situation the action &lt;expectTimout&gt; shall help. The usage
    is very simple as the following example shows:</para>
    
    <para><emphasis>XML DSL</emphasis></para>
    <programlisting>&lt;testcase name=&quot;receiveJMSTimeoutTest&quot;&gt;
    &lt;actions&gt;
        &lt;expect-timeout endpoint=&quot;myEndpoint&quot; wait=&quot;500&quot;/&gt;
    &lt;/actions&gt;
&lt;/testcase&gt;</programlisting>

    <para><emphasis>Java DSL designer</emphasis></para>
    <programlisting language="java">@Autowired
@Qualifier("myEndpoint")
private Endpoint myEndpoint;

@CitrusTest
public void receiveTimeoutTest() {
    receiveTimeout(myEndpoint)
        .timeout(500);
}</programlisting>

    <para><emphasis>Java DSL runner</emphasis></para>
    <programlisting language="java">@Autowired
@Qualifier("myEndpoint")
private Endpoint myEndpoint;

@CitrusTest
public void receiveTimeoutTest() {
    receiveTimeout(action -> action.endpoint(myEndpoint)
                    .timeout(500));
}</programlisting>
    
    <para>The action offers two attributes:</para>
    
    <itemizedlist mark="opencircle">
        <listitem>
            <para><emphasis>endpoint</emphasis>: Reference to a message endpoint that will try to receive messages.</para>
        </listitem>
        <listitem>
            <para><emphasis>wait/timeout</emphasis>: Time period to wait for messages to arrive</para>
        </listitem>
    </itemizedlist>
    
    <para>Sometimes you may want to add some selector on the timeout receiving action. This way you can very selective check on a message to not be present on a message destination.
    This is possible with defining a message selector on the test action as follows.</para>

    <para><emphasis>XML DSL</emphasis></para>
    <programlisting>&lt;expect-timeout endpoint=&quot;myEndpoint&quot; wait=&quot;500&quot;&gt;
  &lt;select&gt;MessageId='123456789'&lt;select/&gt;
&lt;expect-timeout/&gt;</programlisting>

    <para><emphasis>Java DSL designer</emphasis></para>
    <programlisting language="java">@CitrusTest
public void receiveTimeoutTest() {
    receiveTimeout(myEndpoint)
        .selector("MessageId = '123456789'")
        .timeout(500);
}</programlisting>

    <para><emphasis>Java DSL runner</emphasis></para>
    <programlisting language="java">@CitrusTest
public void receiveTimeoutTest() {
    receiveTimeout(action -> action.endpoint(myEndpoint)
                    .selector("MessageId = '123456789'")
                    .timeout(500));
}</programlisting>
</section>