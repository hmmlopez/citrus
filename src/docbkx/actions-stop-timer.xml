<?xml version="1.0" encoding="UTF-8"?>
<section id="actions-stop-timer">
  <title>Stop Timer</title>

  <para>The &lt;stop-timer&gt; action can be used for stopping either a specific timer (<xref linkend="containers-timer"/>) or all timers running within a
    test. This action is useful when timers are started in the background (using parallel or fork=true) and
    you wish to stop these timers at the end of the test. Some examples of using this action are provided below:</para>

  <para><emphasis>XML DSL</emphasis></para>
  <programlisting>&lt;testcase name=&quot;timerTest&quot;&gt;
    &lt;actions&gt;
      &lt;timer id=&quot;forkedTimer&quot; fork=&quot;true&quot;&gt;
        &lt;sleep milliseconds=&quot;50&quot; /&gt;
      &lt;/timer&gt;

      &lt;timer fork=&quot;true&quot;&gt;
        &lt;sleep milliseconds=&quot;50&quot; /&gt;
      &lt;/timer&gt;

      &lt;timer repeatCount=&quot;5&quot;&gt;
        &lt;sleep milliseconds=&quot;50&quot; /&gt;
      &lt;/timer&gt;

      &lt;stop-timer timerId=&quot;forkedTimer&quot; /&gt;
    &lt;/actions&gt;
    &lt;finally&gt;
      &lt;stop-timer /&gt;
    &lt;/finally&gt;
  &lt;/testcase&gt;</programlisting>

  <para><emphasis>Java DSL designer and runner</emphasis></para>
  <programlisting language="java">@CitrusTest
  public void timerTest() {

    timer()
      .timerId("forkedTimer")
      .fork(true)
      .actions(sleep(50L)
    );

    timer()
      .fork(true)
      .actions(sleep(50L)
    );

    timer()
      .repeatCount(5)
      .actions(sleep(50L));

    stopTimer("forkedTimer")

    doFinally().actions(
      stopTimer()
    );
    }</programlisting>

  <para>In the above example 3 timers are started, the first 2 in the background and the third
    in the test execution thread. Timer #3 has a repeatCount set to 5 so it will terminate
    automatically after 5 runs. Timer #1 and #2 however have no repeatCount set so they will
    execute until they are told to stop.</para>

  <para>Timer #1 is stopped explicitly using the first stopTimer action. Here the stopTimer action
    includes the name of the timer to stop. This is convenient when you wish to terminate a
    specific timer. However since no timerId was set for timer #2, you can terminate this (and
    all other timers) using the 'stopTimer' action with no explicit timerId set.
  </para>

</section>