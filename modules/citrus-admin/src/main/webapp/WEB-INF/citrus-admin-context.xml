<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
           http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!-- Used for autowiring -->
    <context:annotation-config/>
    
    <!-- Register MBeans -->
    <context:mbean-export default-domain="com.consol.citrus.admin"/>
    
    <!-- Auto detected POJOs labeled with the @Controller annotation -->
    <context:component-scan base-package="com.consol.citrus.admin.controller"/>
    <context:component-scan base-package="com.consol.citrus.admin.converter"/>
    <context:component-scan base-package="com.consol.citrus.admin.service"/>
    <context:component-scan base-package="com.consol.citrus.admin.jaxb"/>
    <context:component-scan base-package="com.consol.citrus.admin.jackson"/>
    <context:component-scan base-package="com.consol.citrus.admin.util"/>

    <mvc:interceptors>
        <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <property name="cacheSeconds" value="0"/>
            <property name="useExpiresHeader" value="true"/>
            <property name="useCacheControlHeader" value="true"/>
            <property name="useCacheControlNoStore" value="true"/>
            <property name="cacheMappings">
                <props>
                    <prop key="/javascript/support/*.js">86400</prop>
                </props>
            </property>
        </bean>
    </mvc:interceptors>

    <!-- Turns on support for mapping requests to Spring MVC @Controller methods
         Also registers default formatters and validators for use across all @Controllers -->
    <mvc:annotation-driven conversion-service="applicationConversionService">
      <mvc:message-converters register-defaults="true">
        <bean parent="jsonHttpMessageConverter"/>
      </mvc:message-converters>
    </mvc:annotation-driven>
    <bean id="applicationConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
     
    <!-- Handles HTTP GET requests for /static/** by efficiently serving up static resources -->
    <mvc:resources location="/images/, /styles/, /javascript/" mapping="/static/**"/>
    
    <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource requests to the container's default Servlet -->
    <mvc:default-servlet-handler/>

    <bean id="handlebarsViewResolver" class="com.github.jknack.handlebars.springmvc.HandlebarsViewResolver">
      <property name="order" value="1"/>
      <property name="cache" value="false"/>
      <property name="failOnMissingFile" value="false"/>
      <property name="prefix" value="/javascript/templates"/>
      <property name="suffix" value=".html"/>
    </bean>

    <bean id="handlebarsPostProcessor" class="com.consol.citrus.admin.handlebars.HandlebarsHelperPostProcessor">
      <property name="helperSources">
        <list>
          <bean class="com.consol.citrus.admin.handlebars.HandlebarsHelperSource"/>
        </list>
      </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <property name="order" value="2"/>
      <property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView"/>
      <property name="suffix" value=".html"/>
    </bean>

    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/setup" view-name="setup"/>

    <mvc:interceptors>
        <bean class="com.consol.citrus.admin.controller.ProjectSetupInterceptor">
            <property name="redirect" value="/setup"/>
            <property name="excludes" value="/images/*, /styles/*, /javascript/*, /project, /project/open, /project/reset"/>
        </bean> 
    </mvc:interceptors>
    
    <bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
      <property name="objectMapper" ref="jacksonObjectMapper"/>
    </bean>

    <bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper"/>

    <bean id="jacksonSerializationConfig" class="org.codehaus.jackson.map.SerializationConfig"
          factory-bean="jacksonObjectMapper" factory-method="getSerializationConfig" />

    <!-- Ensure null Objects/values are ignored and not shown in the produced
      json message -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
      <property name="targetObject" ref="jacksonSerializationConfig" />
      <property name="targetMethod" value="setSerializationInclusion" />
      <property name="arguments">
        <list>
          <value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_NULL</value>
        </list>
      </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
      <property name="targetObject" ref="jacksonSerializationConfig" />
      <property name="targetMethod" value="enable" />
      <property name="arguments">
        <list>
          <value type="org.codehaus.jackson.map.SerializationConfig.Feature">INDENT_OUTPUT</value>
        </list>
      </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
        <property name="order" value="1" />
        <property name="messageConverters">
            <list>
                <ref bean="jsonHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!-- Classpath test case executor -->
    <bean class="com.consol.citrus.admin.executor.ClasspathTestExecutor"/>
    <bean class="com.consol.citrus.admin.executor.ApplicationContextHolder" scope="singleton"/>

    <!-- Filesystem test case executor -->
    <bean class="com.consol.citrus.admin.executor.MavenTestExecutor"/>
    <bean id="processMonitor" class="com.consol.citrus.admin.launcher.ProcessMonitorImpl" scope="singleton"/>

    <!-- Services -->
    <bean class="com.consol.citrus.admin.report.TestNGTestReportService"/>

    <!-- Central web socket pushes events to connected clients -->
    <bean id="loggingWebSocket" class="com.consol.citrus.admin.websocket.LoggingWebSocket" scope="singleton"/>

    <bean id="loggingWebSocketCreator" class="com.consol.citrus.admin.websocket.LoggingWebSocketCreator" scope="singleton"/>

    <bean class="com.consol.citrus.admin.websocket.WebSocketTestListener"/>
    <bean class="com.consol.citrus.admin.websocket.WebSocketProcessListener"/>
    <bean class="com.consol.citrus.admin.websocket.WebSocketLoggingAppender"/>

    <!-- XML Marshalling -->
    <oxm:jaxb2-marshaller id="jaxbMarshaller">
        <oxm:class-to-be-bound name="com.consol.citrus.admin.spring.model.SpringBeans" />
        <oxm:class-to-be-bound name="com.consol.citrus.model.testcase.core.TestcaseDefinition" />
    </oxm:jaxb2-marshaller>
</beans>
