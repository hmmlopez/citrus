<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.citrusframework.org/schema/testcase"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.springframework.org/schema/beans
                                  http://www.springframework.org/schema/beans/spring-beans.xsd
                                  http://www.citrusframework.org/schema/testcase
                                  http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd">

  <testcase name="RmiClientIT">
    <meta-info>
      <author>Christoph Deppisch</author>
      <creationdate>2015-12-10</creationdate>
      <status>FINAL</status>
      <last-updated-by>Christoph Deppisch</last-updated-by>
      <last-updated-on>2015-12-10T00:00:00</last-updated-on>
    </meta-info>

    <description>Test RMI client server communication.</description>

    <actions>
      <echo>
        <message>Test 1: Call RMI service as client and receive result</message>
      </echo>

      <send endpoint="rmiNewsClient">
        <message>
          <payload>
            <service-invocation xmlns="http://www.citrusframework.org/schema/rmi/message">
              <remote>com.consol.citrus.rmi.remote.NewsService</remote>
              <method>getNews</method>
            </service-invocation>
          </payload>
        </message>
      </send>

      <receive endpoint="rmiNewsClient">
        <message>
          <payload>
            <service-result xmlns="http://www.citrusframework.org/schema/rmi/message">
              <object type="java.lang.String" value="This is news from RMI!"/>
            </service-result>
          </payload>
        </message>
      </receive>

      <echo>
        <message>Test 2: Call RMI service with method argument and receive null result</message>
      </echo>

      <send endpoint="rmiNewsClient">
        <message>
          <payload>
            <service-invocation xmlns="http://www.citrusframework.org/schema/rmi/message">
              <remote>com.consol.citrus.rmi.remote.NewsService</remote>
              <method>setNews</method>
              <args>
                <arg value="This is breaking news!"/>
              </args>
            </service-invocation>
          </payload>
        </message>
      </send>

      <receive endpoint="rmiNewsClient">
        <message>
          <payload>
            <service-result xmlns="http://www.citrusframework.org/schema/rmi/message"/>
          </payload>
        </message>
      </receive>

      <echo>
        <message>Test 3: Call RMI service and receive updated result</message>
      </echo>

      <send endpoint="rmiNewsClient">
        <message>
          <payload>
            <service-invocation xmlns="http://www.citrusframework.org/schema/rmi/message">
              <remote>com.consol.citrus.rmi.remote.NewsService</remote>
              <method>getNews</method>
            </service-invocation>
          </payload>
        </message>
      </send>

      <receive endpoint="rmiNewsClient">
        <message>
          <payload>
            <service-result xmlns="http://www.citrusframework.org/schema/rmi/message">
              <object type="java.lang.String" value="This is breaking news!"/>
            </service-result>
          </payload>
        </message>
      </receive>

    </actions>
    
    <finally>
      <send endpoint="rmiNewsClient">
        <message>
          <payload>
            <service-invocation xmlns="http://www.citrusframework.org/schema/rmi/message">
              <remote>com.consol.citrus.rmi.remote.NewsService</remote>
              <method>setNews</method>
              <args>
                <arg value="This is news from RMI!"/>
              </args>
            </service-invocation>
          </payload>
        </message>
      </send>

      <receive endpoint="rmiNewsClient">
        <message>
          <payload>
            <service-result xmlns="http://www.citrusframework.org/schema/rmi/message"/>
          </payload>
        </message>
      </receive>
    </finally>
  </testcase>
</spring:beans>